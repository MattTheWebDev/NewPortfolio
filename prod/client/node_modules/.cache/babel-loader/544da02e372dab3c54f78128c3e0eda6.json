{"ast":null,"code":"var _jsxFileName = \"/Users/Matthew/projects/prod/server/client/src/components/MarvelMovie.js\";\nimport React from \"react\";\n\nclass MarvelMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      marvelMovieAPI: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3091/marvelAPI').then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        marvelMovieApi: result.marvelMovies\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      err,\n      isLoaded,\n      marvelMoviesAPI\n    } = this.state;\n\n    if (err) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }\n      }, \"Error \", err.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    } else return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default MarvelMovie;","map":{"version":3,"sources":["/Users/Matthew/projects/prod/server/client/src/components/MarvelMovie.js"],"names":["React","MarvelMovie","Component","constructor","props","state","error","isLoaded","marvelMovieAPI","componentDidMount","fetch","then","res","json","result","setState","marvelMovieApi","marvelMovies","render","err","marvelMoviesAPI","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAC,IADG;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,cAAc,EAAE;AAHP,KAAb;AAKH;;AAGDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZS,QAAAA,cAAc,EAAEF,MAAM,CAACG;AAFX,OAAd;AAID,KARH,EASE;AACA;AACA;AACCX,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjBH;AAmBH;;AAICY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,GAAF;AAAOZ,MAAAA,QAAP;AAAiBa,MAAAA;AAAjB,QAAqC,KAAKf,KAAhD;;AACA,QAAIc,GAAJ,EAAS;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYA,GAAG,CAACE,OAAhB,CAAP;AACH,KAFD,MAGK,IAAI,CAACd,QAAL,EAAe;AAChB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFI,MAGA,oBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK;AAKV;;AAhDuC;;AAkD1C,eAAeN,WAAf","sourcesContent":["import React from \"react\";\n\nclass MarvelMovie extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            error:null,\n            isLoaded: false,\n            marvelMovieAPI: []\n        }\n    }\n\n\n    componentDidMount() {\n      fetch('http://localhost:3091/marvelAPI')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            marvelMovieApi: result.marvelMovies\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n  \n  \n  \n    render() {\n        const { err, isLoaded, marvelMoviesAPI } = this.state\n        if (err) {\n            return <div>Error {err.message}</div>\n        }\n        else if (!isLoaded) {\n            return <div>Loading...</div>\n        }\n        else return (\n        <div>\n           \n        </div>\n    )\n  }\n}    \nexport default MarvelMovie \n  \n\n\n"]},"metadata":{},"sourceType":"module"}