{"ast":null,"code":"var _jsxFileName = \"/Users/Matthew/projects/prod/server/client/src/components/MarvelMovie.js\";\nimport React from \"react\";\n\nclass MarvelMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      marvelMovies: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3091/marvelAPI').then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        marvelMovies: result.marvelMovies\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      err,\n      isLoaded,\n      marvelMovies\n    } = this.state;\n\n    if (err) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 20\n        }\n      }, \"Error \", err.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"moviePoster\",\n        src: marvelMovies.marvelContent[this.props.id].poster,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"movieStar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, marvelMovies.marvelContent[this.props.id].stars, \" Stars\"));\n    }\n  }\n\n}\n\nexport default MarvelMovie;","map":{"version":3,"sources":["/Users/Matthew/projects/prod/server/client/src/components/MarvelMovie.js"],"names":["React","MarvelMovie","Component","constructor","props","state","error","isLoaded","marvelMovies","componentDidMount","fetch","then","res","json","result","setState","render","err","message","marvelContent","id","poster","stars"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAC,IADG;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,YAAY,EAAE;AAHL,KAAb;AAKH;;AAGDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,YAAY,EAAEM,MAAM,CAACN;AAFT,OAAd;AAID,KARH,EASE;AACA;AACA;AACCF,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjBH;AAmBH;;AAICU,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEC,MAAAA,GAAF;AAAOV,MAAAA,QAAP;AAAiBC,MAAAA;AAAjB,QAAkC,KAAKH,KAA7C;;AACA,QAAIY,GAAJ,EAAS;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYA,GAAG,CAACC,OAAhB,CAAP;AACH,KAFD,MAGK,IAAI,CAACX,QAAL,EAAe;AAChB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFI,MAGA;AACD,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,GAAG,EAAEC,YAAY,CAACW,aAAb,CAA2B,KAAKf,KAAL,CAAWgB,EAAtC,EAA0CC,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0Bb,YAAY,CAACW,aAAb,CAA2B,KAAKf,KAAL,CAAWgB,EAAtC,EAA0CE,KAApE,WAFJ,CADJ;AAMH;AAEN;;AArDuC;;AAuD1C,eAAerB,WAAf","sourcesContent":["import React from \"react\";\n\nclass MarvelMovie extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            error:null,\n            isLoaded: false,\n            marvelMovies: []\n        }\n    }\n\n\n    componentDidMount() {\n      fetch('http://localhost:3091/marvelAPI')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            marvelMovies: result.marvelMovies\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n  \n  \n  \n    render() {\n\n        const { err, isLoaded, marvelMovies } = this.state\n        if (err) {\n            return <div>Error {err.message}</div>\n        }\n        else if (!isLoaded) {\n            return <div>Loading...</div>\n        }\n        else {\n            return (\n                <div>\n                    <img className='moviePoster' src={marvelMovies.marvelContent[this.props.id].poster} />\n                    <p className='movieStar'>{marvelMovies.marvelContent[this.props.id].stars} Stars</p>\n                </div>\n            )\n        }\n   \n  }\n}    \nexport default MarvelMovie \n  \n\n\n"]},"metadata":{},"sourceType":"module"}