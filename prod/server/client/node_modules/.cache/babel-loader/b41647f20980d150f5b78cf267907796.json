{"ast":null,"code":"var _jsxFileName = \"/Users/Matthew/projects/prod/server/client/src/components/MarvelMovie.js\";\nimport React from \"react\";\n\nclass MarvelMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      marvelMovies: []\n    };\n    this.state = {\n      isSelected: false\n    };\n    this.selectMovie = this.selectMovie.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3091/marvelAPI').then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        marvelMovies: result.marvelMovies\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  selectMovie() {\n    this.setState(state => ({\n      isSelected: !state.isSelected\n    }));\n  }\n\n  render() {\n    const {\n      err,\n      isLoaded,\n      marvelMovies\n    } = this.state;\n\n    if (err) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }\n      }, \"Error \", err.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.isSelected ? 'selectedMovie' : 'null',\n        onClick: () => {\n          this.props.removeTaskFunction(todo);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"moviePoster\",\n        src: marvelMovies.marvelContent[this.props.id].poster,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"movieStar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, marvelMovies.marvelContent[this.props.id].stars, \" Stars\"));\n    }\n  }\n\n}\n\nexport default MarvelMovie;","map":{"version":3,"sources":["/Users/Matthew/projects/prod/server/client/src/components/MarvelMovie.js"],"names":["React","MarvelMovie","Component","constructor","props","state","error","isLoaded","marvelMovies","isSelected","selectMovie","bind","componentDidMount","fetch","then","res","json","result","setState","render","err","message","removeTaskFunction","todo","marvelContent","id","poster","stars"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAC,IADG;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,YAAY,EAAE;AAHL,KAAb;AAKA,SAAKH,KAAL,GAAY;AAACI,MAAAA,UAAU,EAAE;AAAb,KAAZ;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAGDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,YAAY,EAAES,MAAM,CAACT;AAFT,OAAd;AAID,KARH,EASE;AACA;AACA;AACCF,IAAAA,KAAD,IAAW;AACT,WAAKY,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjBH;AAmBH;;AAEDI,EAAAA,WAAW,GAAG;AACZ,SAAKQ,QAAL,CAAcb,KAAK,KAAK;AACtBI,MAAAA,UAAU,EAAE,CAACJ,KAAK,CAACI;AADG,KAAL,CAAnB;AAGD;;AAICU,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEC,MAAAA,GAAF;AAAOb,MAAAA,QAAP;AAAiBC,MAAAA;AAAjB,QAAkC,KAAKH,KAA7C;;AACA,QAAIe,GAAJ,EAAS;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYA,GAAG,CAACC,OAAhB,CAAP;AACH,KAFD,MAGK,IAAI,CAACd,QAAL,EAAe;AAChB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFI,MAGA;AACD,0BACI;AAAK,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWI,UAAX,GAAwB,eAAxB,GAA0C,MAA1D;AACA,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKL,KAAL,CAAWkB,kBAAX,CAA8BC,IAA9B;AAAqC,SADtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,GAAG,EAAEf,YAAY,CAACgB,aAAb,CAA2B,KAAKpB,KAAL,CAAWqB,EAAtC,EAA0CC,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BlB,YAAY,CAACgB,aAAb,CAA2B,KAAKpB,KAAL,CAAWqB,EAAtC,EAA0CE,KAApE,WAHJ,CADJ;AAOH;AAEN;;AA9DuC;;AAgE1C,eAAe1B,WAAf","sourcesContent":["import React from \"react\";\n\nclass MarvelMovie extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            error:null,\n            isLoaded: false,\n            marvelMovies: []\n        }\n        this.state= {isSelected: false}\n        this.selectMovie = this.selectMovie.bind(this)\n    }\n\n\n    componentDidMount() {\n      fetch('http://localhost:3091/marvelAPI')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            marvelMovies: result.marvelMovies\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n  \n  selectMovie() {\n    this.setState(state => ({\n      isSelected: !state.isSelected\n      }))\n  }\n  \n  \n  \n    render() {\n\n        const { err, isLoaded, marvelMovies } = this.state\n        if (err) {\n            return <div>Error {err.message}</div>\n        }\n        else if (!isLoaded) {\n            return <div>Loading...</div>\n        }\n        else {\n            return (\n                <div className={this.state.isSelected ? 'selectedMovie' : 'null'}\n                onClick={() => { this.props.removeTaskFunction(todo) }}>\n                    <img className='moviePoster' src={marvelMovies.marvelContent[this.props.id].poster} />\n                    <p className='movieStar'>{marvelMovies.marvelContent[this.props.id].stars} Stars</p>\n                </div>\n            )\n        }\n   \n  }\n}    \nexport default MarvelMovie \n  \n\n\n"]},"metadata":{},"sourceType":"module"}